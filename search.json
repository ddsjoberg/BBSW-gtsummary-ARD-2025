[
  {
    "objectID": "slides/02-tables-gtsummary/index.html#acknowledgements",
    "href": "slides/02-tables-gtsummary/index.html#acknowledgements",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\n\n\n\nThis work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA4.0)."
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#daniel-d.-sjoberg",
    "href": "slides/02-tables-gtsummary/index.html#daniel-d.-sjoberg",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Daniel D. Sjoberg",
    "text": "Daniel D. Sjoberg\n\n\n danieldsjoberg.com\n ddsjoberg.bsky.social\n linkedin.com/in/ddsjoberg\n github.com/ddsjoberg"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#questions",
    "href": "slides/02-tables-gtsummary/index.html#questions",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Questions",
    "text": "Questions\n\n\n Please ask questions at any time!"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#section",
    "href": "slides/02-tables-gtsummary/index.html#section",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "How it started\n\n\nBegan to address reproducible issues while working in academia\nGoal was to build a package to summarize study results with code that was both simple and customizable\nFirst release in May 2019\n\n\n\nHow it’s going\n\n\nThe stats\n\n1,500,000+ installations from CRAN\n1,100+ GitHub stars\n300+ contributors\n50+ code contributors\n\nWon the 2021 American Statistical Association (ASA) Innovation in Programming Award\nWon the 2024 Posit Pharma Table Contest"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-overview",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-overview",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\n\n\n\nCreate tabular summaries with sensible defaults but highly customizable\nTypes of summaries:\n\nDemographic- or “Table 1”-types\nCross-tabulation\nRegression models\nSurvival data\nSurvey data\nCustom tables\n\n\n\n\nReport statistics from {gtsummary} tables inline in R Markdown\nStack and/or merge any table type\nUse themes to standardize across tables\nChoose from different print engines"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-overview-1",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-overview-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\nFor our workshop, we will focus on the following summary types as well as themes and print engines.\n\ntbl_summary()\ntbl_hierarchical()\n\n\nOther functions helpful functions we’re not covering:\n\n\ntbl_hierarchical_count(): similar to tbl_hierarchical() for counts instead of rates\ntbl_cross(): cross tabulations\ntbl_continuous(): summarizing continuous variables by 2 categorical variables\ntbl_wide_summary(): similar to tbl_summary() but statistics are presented in separate columns\nmany more!"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#prepare-the-data",
    "href": "slides/02-tables-gtsummary/index.html#prepare-the-data",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Prepare the data",
    "text": "Prepare the data\n\nlibrary(pharmaverseadam)\nlibrary(tidyverse)\n\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  filter(ARM != \"Screen Failure\") |&gt; \n  select(USUBJID, ARM, AGE, ETHNIC, SEX, TRTDURD) |&gt; \n  mutate(FEMALE  = SEX == \"F\") |&gt; \n  labelled::set_variable_labels(FEMALE = \"Female\")\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  filter(\n    USUBJID %in% adsl$USUBJID,\n    AESOC %in% c(\"CARDIAC DISORDERS\", \"EYE DISORDERS\"),\n    AEDECOD %in% c(\"ATRIAL FLUTTER\", \"MYOCARDIAL INFARCTION\",\n                   \"EYE ALLERGY\", \"EYE SWELLING\")\n  ) |&gt; \n  select(USUBJID, ARM, AEDECOD, AESOC, AEHLT, AESEV, AESER, AEREL)\n\nadlb &lt;- pharmaverseadam::adlb |&gt; \n  filter(\n    USUBJID %in% adsl$USUBJID, \n    PARAM %in% c(\"Albumin (g/L)\", \"Bilirubin (umol/L)\" , \"Leukocytes (10^9/L)\"),\n    AVISIT %in% c(\"Baseline\", \"Week 12\", \"Week 24\")\n  ) |&gt; \n  select(USUBJID, ARM, AVISIT, AVISITN, PARCAT1, PARAM, PARAMCD, \n         AVAL, AVALC, BASE, CHG)\n\n# Construct an oncology outcomes dataset\nad_onco &lt;-\n  list(\n    # Best Overall Response\n    pharmaverseadam::adrs_onco |&gt; \n      filter(PARAMCD == \"CBOR\") |&gt; \n      select(USUBJID, RECIST_CBOR = AVALC) |&gt; \n      labelled::set_variable_labels(RECIST_CBOR = \"Best Overall Response\"),\n    # Tumor Size\n    pharmaverseadam::adtr_onco |&gt; \n      filter(PARAM == \"Target Lesions Sum of Diameters by Investigator\") |&gt; \n      select(USUBJID, TUMOR_SIZE = AVAL) |&gt; \n      labelled::set_variable_labels(TUMOR_SIZE = \"Tumor Size, mm\"),\n    # Progression-free Survival\n    pharmaverseadam::adtte_onco |&gt; \n      filter(PARAMCD == \"PFS\") |&gt; \n      select(USUBJID, PFS_CNSR = CNSR, PFS_TIME = AVAL) |&gt; \n      mutate(PFS_EVENT = abs(PFS_CNSR - 1)) |&gt; \n      labelled::set_variable_labels(\n        PFS_CNSR = \"PFS, Censor\",\n        PFS_EVENT = \"Progression\",\n        PFS_TIME = \"PFS Followup Time, days\"\n      )\n  ) |&gt; \n  reduce(full_join, by = \"USUBJID\") |&gt; \n  inner_join(adsl[c(\"USUBJID\", \"AGE\", \"ETHNIC\", \"ARM\")], by = \"USUBJID\") |&gt; \n  mutate(ARM2 = word(ARM, 1))"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#basic-tbl_summary",
    "href": "slides/02-tables-gtsummary/index.html#basic-tbl_summary",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Basic tbl_summary()",
    "text": "Basic tbl_summary()\n\n\n\nlibrary(gtsummary)\n\nadsl |&gt; \n  tbl_summary(\n    include = c(AGE, ETHNIC, FEMALE)\n  )\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2541\n\n\n\n\nAge\n77 (70, 81)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n242 (95%)\n\n\nFemale\n143 (56%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\nFour types of summaries: continuous, continuous2, categorical, and dichotomous\nStatistics are median (IQR) for continuous, n (%) for categorical/dichotomous\nVariables coded 0/1, TRUE/FALSE, Yes/No treated as dichotomous by default\nLabel attributes are printed automatically"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output",
    "href": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge\n76 (69, 82)\n76 (71, 80)\n78 (71, 82)\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 (62%)\n40 (48%)\n50 (60%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output-1",
    "href": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n  type = AGE ~ \"continuous2\",\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Median (Q1, Q3)\n76 (69, 82)\n76 (71, 80)\n78 (71, 82)\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 (62%)\n40 (48%)\n50 (60%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output-2",
    "href": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n  type = AGE ~ \"continuous2\",\n  statistic = \n    list(\n      AGE ~ c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      FEMALE ~ \"{n} / {N} ({p}%)\"\n    ),\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Min, Max\n52, 89\n56, 88\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 / 86 (62%)\n40 / 84 (48%)\n50 / 84 (60%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output-3",
    "href": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n  type = AGE ~ \"continuous2\",\n  statistic = \n    list(\n      AGE ~ c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      FEMALE ~ \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    AGE ~ \"Age, years\",\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge, years\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Min, Max\n52, 89\n56, 88\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 / 86 (62%)\n40 / 84 (48%)\n50 / 84 (60%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output-4",
    "href": "slides/02-tables-gtsummary/index.html#customize-tbl_summary-output-4",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  adsl,\n  include = c(AGE, ETHNIC, FEMALE),\n  by = ARM,\n  type = AGE ~ \"continuous2\",\n  statistic = \n    list(\n      AGE ~ c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      FEMALE ~ \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    AGE ~ \"Age, years\",\n  digits = AGE ~ list(sd = 1) # report SD(age) to one decimal place\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nAge, years\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (8.6)\n74 (7.9)\n76 (8.3)\n\n\n    Min, Max\n52, 89\n56, 88\n51, 88\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n\n\nFemale\n53 / 86 (62%)\n40 / 84 (48%)\n50 / 84 (60%)\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels\ndigits: specify the number of decimal places for rounding"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-formulas",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-formulas",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} + formulas",
    "text": "{gtsummary} + formulas\nThis syntax is also used in {cards}, {cardx}, {crane}, and {gt}.\n\n\n\nNamed list are OK too! label = list(age = \"Patient Age\")"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#section-1",
    "href": "slides/02-tables-gtsummary/index.html#section-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "{gtsummary} selectors\n\nUse the following helpers to select groups of variables: all_continuous(), all_categorical()\nUse all_stat_cols() to select the summary statistic columns\n\nAdd-on functions in {gtsummary}\ntbl_summary() objects can also be updated using related functions.\n\nadd_*() add additional column of statistics or information, e.g. p-values, q-values, overall statistics, treatment differences, N obs., and more\nmodify_*() modify table headers, spanning headers, footnotes, and more\nbold_*()/italicize_*() style labels, variable levels, significant p-values"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-add_",
    "href": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-add_",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nadsl |&gt;\n  tbl_summary(\n    by = ARM,\n    include = c(AGE, ETHNIC, FEMALE)\n  ) |&gt; \n  add_overall(last = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\nOverall\nN = 2541\n\n\n\n\nAge\n76 (69, 82)\n76 (71, 80)\n78 (71, 82)\n77 (70, 81)\n\n\nEthnicity\n\n\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n83 (97%)\n81 (96%)\n78 (93%)\n242 (95%)\n\n\nFemale\n53 (62%)\n40 (48%)\n50 (60%)\n143 (56%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-add_-1",
    "href": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-add_-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nad_onco |&gt;\n  tbl_summary(\n    by = ARM2, \n    include = c(TUMOR_SIZE, PFS_EVENT),\n    missing = \"no\"\n  ) |&gt; \n  add_n() |&gt; \n  add_p(pvalue_fun = label_style_pvalue(digits = 2)) |&gt; \n  add_q(method = \"fdr\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nPlacebo\nN = 961\nXanomeline\nN = 1771\np-value2\nq-value3\n\n\n\n\nTumor Size, mm\n25\n78 (38, 96)\n67 (26, 92)\n0.66\n0.69\n\n\nProgression\n273\n6 (6.3%)\n9 (5.1%)\n0.69\n0.69\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n3 False discovery rate correction for multiple testing\n\n\n\n\n\n\n\n\n\nadd_p(): adds a column of p-values\nadd_q(): adds a column of p-values adjusted for multiple comparisons through a call to p.adjust()"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-modify_",
    "href": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-modify_",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with modify_*()",
    "text": "Update tbl_summary() with modify_*()\n\n\ntbl &lt;-\n  adsl[c(\"ARM\", \"AGE\", \"ETHNIC\", \"FEMALE\")] |&gt; \n  filter(startsWith(ARM, \"Xanomeline\")) |&gt; \n  tbl_summary(by = ARM, \n              missing = \"no\") |&gt;\n  modify_header(\n    stat_1 ~ \"**Group A**\",\n    stat_2 ~ \"**Group B**\"\n  ) |&gt; \n  modify_spanning_header(\n    all_stat_cols() ~ \"**Drug**\") |&gt; \n  modify_footnote(\n    all_stat_cols() ~ \n      paste(\"median (IQR) for continuous;\",\n            \"n (%) for categorical\")\n  )\ntbl\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug\n\n\n\nGroup A1\nGroup B1\n\n\n\n\nAge\n76 (71, 80)\n78 (71, 82)\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n81 (96%)\n78 (93%)\n\n\nFemale\n40 (48%)\n50 (60%)\n\n\n\n1 median (IQR) for continuous; n (%) for categorical\n\n\n\n\n\n\n\n\n\nUse show_header_names() to see the internal header names available for use in modify_header()"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#column-names",
    "href": "slides/02-tables-gtsummary/index.html#column-names",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Column names",
    "text": "Column names\n\nshow_header_names(tbl)\n\nColumn Name   Header                 level*                       N*          n*         p*             \nlabel         \"**Characteristic**\"                                168 &lt;int&gt;                             \nstat_1        \"**Group A**\"          Xanomeline High Dose &lt;chr&gt;   168 &lt;int&gt;   84 &lt;int&gt;   0.500 &lt;dbl&gt;    \nstat_2        \"**Group B**\"           Xanomeline Low Dose &lt;chr&gt;   168 &lt;int&gt;   84 &lt;int&gt;   0.500 &lt;dbl&gt;    \n\n\n* These values may be dynamically placed into headers (and other locations).\nℹ Review the `modify_header()` (`?gtsummary::modify_header()`) help for examples.\n\n\n\n\nall_stat_cols() selects columns \"stat_1\" and \"stat_2\""
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-add_-2",
    "href": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-add_-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\nad_onco |&gt;\n  tbl_summary(\n    by = ARM2,\n    include = c(TUMOR_SIZE, PFS_EVENT),\n    statistic = list(TUMOR_SIZE = \"{mean} ({sd})\",\n                     PFS_EVENT = \"{p}%\"),\n    missing = \"no\"\n  ) |&gt; \n  add_difference()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = 961\nXanomeline\nN = 1771\nDifference2\n95% CI2\np-value2\n\n\n\n\nTumor Size, mm\n67 (37)\n59 (39)\n7.6\n-24, 39\n0.6\n\n\nProgression\n6.3%\n5.1%\n1.2%\n-5.5%, 7.8%\n&gt;0.9\n\n\n\n1 Mean (SD); %\n\n\n2 Welch Two Sample t-test; 2-sample test for equality of proportions with continuity correction\n\n\nAbbreviation: CI = Confidence Interval\n\n\n\n\n\n\n\n\n\nadd_difference(): mean and rate differences between two groups. Can also be adjusted differences"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-add_-3",
    "href": "slides/02-tables-gtsummary/index.html#update-tbl_summary-with-add_-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\n\nadsl |&gt;\n  tbl_summary(\n    by = ARM,\n    include = c(AGE, ETHNIC, FEMALE)\n  ) |&gt; \n  add_stat(...)\n\n\n\nCustomize statistics presented with add_stat()\nAdded statistics can be placed on the label or the level rows\nAdded statistics may be a single column or multiple"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#where-are-the-ards",
    "href": "slides/02-tables-gtsummary/index.html#where-are-the-ards",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Where are the ARDs?",
    "text": "Where are the ARDs?\n\n\n\nARDs are the backbone for all calculations in gtsummary\nEvery gtsummary table saves the ARDs from each calculation\nThey can be extracted individually, or combined.\n\n\n\ntbl &lt;- tbl_summary(adsl, by = \"ARM\", include = \"AGE\") |&gt; add_p()\nnames(tbl$cards)\n\n[1] \"tbl_summary\" \"add_p\"      \n\ntbl$cards[[\"add_p\"]][[\"AGE\"]]\n\n{cards} data frame: 4 x 9\n\n\n  group1 variable   context stat_name stat_label      stat\n1    ARM      AGE stats_kr… statistic  Kruskal-…     1.635\n2    ARM      AGE stats_kr…   p.value    p-value     0.442\n3    ARM      AGE stats_kr… parameter  Degrees …         2\n4    ARM      AGE stats_kr…    method     method Kruskal-…\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#add-on-functions-in-gtsummary-1",
    "href": "slides/02-tables-gtsummary/index.html#add-on-functions-in-gtsummary-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Add-on functions in {gtsummary}",
    "text": "Add-on functions in {gtsummary}\nAnd many more!\nSee the documentation at http://www.danieldsjoberg.com/gtsummary/reference/index.html\nAnd a detailed tbl_summary() vignette at http://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-exercise-1",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-exercise-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} Exercise 1",
    "text": "{gtsummary} Exercise 1\n\nNavigate to Posit Cloud script 04-gtsummary_exercise1.R.\nCreate the table outlined in the script.\nAdd the “completed” sticky note to your laptop when complete.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#adverse-event-reporting-and-friends",
    "href": "slides/02-tables-gtsummary/index.html#adverse-event-reporting-and-friends",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Adverse Event Reporting (and friends)",
    "text": "Adverse Event Reporting (and friends)\nUse tbl_hierarchicial() and tbl_hierarchicial_count() for reporting of AEs, Con Meds, and more.\n\ntbl_ae &lt;- adae |&gt; \n  tbl_hierarchical(\n    by = \"ARM\", \n    variables = c(\"AESOC\", \"AEDECOD\"),\n    id = \"USUBJID\",\n    denominator = adsl\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class\n    Dictionary-Derived Term\nPlacebo\nN = 861\nXanomeline High Dose\nN = 841\nXanomeline Low Dose\nN = 841\n\n\n\n\nCARDIAC DISORDERS\n4 (4.7%)\n5 (6.0%)\n3 (3.6%)\n\n\n    ATRIAL FLUTTER\n0 (0%)\n1 (1.2%)\n1 (1.2%)\n\n\n    MYOCARDIAL INFARCTION\n4 (4.7%)\n4 (4.8%)\n2 (2.4%)\n\n\nEYE DISORDERS\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\n    EYE ALLERGY\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\n    EYE SWELLING\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-qc",
    "href": "slides/02-tables-gtsummary/index.html#ard-qc",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD + QC",
    "text": "ARD + QC\nARDs are wonderful for QCing {gtsummary} tables. 😻\n\nThe ARD include the formatted and un-formatted numbers that appear in the table.\nExtract the ARD from the {gtsummary} table.\nBuild fresh ARD from source data, and compare it to the ARD from the table."
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-qc-extract-ard",
    "href": "slides/02-tables-gtsummary/index.html#ard-qc-extract-ard",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD + QC: Extract ARD",
    "text": "ARD + QC: Extract ARD\n\ngather_ard(tbl_ae)\n\n\n\n{cards} data frame: 36 x 15\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name stat_label  stat stat_fmt\n1     ARM      Placebo  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         n          n     0        0\n2     ARM      Placebo  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         N          N    86       86\n3     ARM      Placebo  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         p          %     0        0\n4     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         n          n     1        1\n5     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         N          N    84       84\n6     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         p          % 0.012      1.2\n7     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         n          n     1        1\n8     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         N          N    84       84\n9     ARM    Xanomeli…  AESOC    CARDIAC …  AEDECOD      ATRIAL F…         p          % 0.012      1.2\n10    ARM      Placebo  AESOC    CARDIAC …  AEDECOD      MYOCARDI…         n          n     4        4\n\n\nℹ 26 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 5 more variables: context, fmt_fun, warning, error, gts_column"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-qc-build-and-compare-ards",
    "href": "slides/02-tables-gtsummary/index.html#ard-qc-build-and-compare-ards",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD + QC: Build and Compare ARDs",
    "text": "ARD + QC: Build and Compare ARDs\n\nard_ae &lt;- adae |&gt; \n  cards::ard_stack_hierarchical(\n    by = \"ARM\", \n    variables = c(\"AESOC\", \"AEDECOD\"),\n    id = \"USUBJID\",\n    denominator = adsl\n  )\n\nThe next step is to simply compare the two ARDs to confirm results. As this is done programmatically, it is quick to repeat as data continues to accrue.\n\nThere are numerous ways to compare objects in R. We are currently developing a tool in {cards} that will streamline ARD comparison, with sensible defaults for ARDs. Stay tuned! 📺"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "href": "slides/02-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_merge() for side-by-side tables",
    "text": "tbl_merge() for side-by-side tables\n\ntbl_n &lt;- \n  tbl_summary(adsl, include = ETHNIC, statistic = ETHNIC ~ \"{n}\") |&gt; \n  modify_header(all_stat_cols() ~ \"**N**\") |&gt; # update column header\n  remove_footnote_header() # remove footnote\ntbl_age &lt;-\n  tbl_continuous(adsl, include = ETHNIC, variable = AGE, by = ARM) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**\") # update header\n\n# combine the tables side by side\nlist(tbl_n, tbl_age) |&gt; \n  tbl_merge(tab_spanner = FALSE) # suppress default header\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nPlacebo1\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nEthnicity\n\n\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n12\n64 (63, 86)\n56 (56, 63)\n73 (56, 82)\n\n\n    NOT HISPANIC OR LATINO\n242\n76 (70, 82)\n77 (72, 80)\n78 (71, 82)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "href": "slides/02-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_stack() to combine vertically",
    "text": "tbl_stack() to combine vertically\n\ntbl_drug_a &lt;- adsl |&gt; \n  filter(ARM == \"Xanomeline High Dose\") |&gt; \n  tbl_summary(include = c(AGE, ETHNIC), missing = \"no\")\ntbl_drug_b &lt;- adsl |&gt; \n  filter(ARM == \"Xanomeline Low Dose\") |&gt; \n  tbl_summary(include = c(AGE, ETHNIC), missing = \"no\")\n\n# stack the two tables \nlist(tbl_drug_a, tbl_drug_b) |&gt; \n  tbl_stack(group_header = c(\"Drug A\", \"Drug B\")) |&gt; # optionally include headers for each table\n  modify_header(all_stat_cols() ~ \"**Summary Statistics**\")\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nSummary Statistics1\n\n\n\n\nDrug A\n\n\nAge\n76 (71, 80)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.6%)\n\n\n    NOT HISPANIC OR LATINO\n81 (96%)\n\n\nDrug B\n\n\nAge\n78 (71, 82)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n78 (93%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#tbl_strata-for-stratified-tables",
    "href": "slides/02-tables-gtsummary/index.html#tbl_strata-for-stratified-tables",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_strata() for stratified tables",
    "text": "tbl_strata() for stratified tables\n\ntbl_strata(\n  adsl, \n  strata = ARM, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(ETHNIC, FEMALE))\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nPlacebo\n\n\nXanomeline High Dose\n\n\nXanomeline Low Dose\n\n\n\nn\n%\nn\n%\nn\n%\n\n\n\n\nEthnicity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3\n3.5%\n3\n3.6%\n6\n7.1%\n\n\n    NOT HISPANIC OR LATINO\n83\n97%\n81\n96%\n78\n93%\n\n\nFemale\n53\n62%\n40\n48%\n50\n60%\n\n\n\n\n\n\n\nThe default is to combine stratified tables with tbl_merge()."
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#tbl_strata-for-stratified-tables-1",
    "href": "slides/02-tables-gtsummary/index.html#tbl_strata-for-stratified-tables-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "tbl_strata() for stratified tables",
    "text": "tbl_strata() for stratified tables\nWe can also stack the tables.\n\ntbl_strata(\n  adsl, \n  strata = ARM, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(ETHNIC, FEMALE)),\n  .combine_with = \"tbl_stack\"\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nn\n%\n\n\n\n\nPlacebo\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3\n3.5%\n\n\n    NOT HISPANIC OR LATINO\n83\n97%\n\n\nFemale\n53\n62%\n\n\nXanomeline High Dose\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3\n3.6%\n\n\n    NOT HISPANIC OR LATINO\n81\n96%\n\n\nFemale\n40\n48%\n\n\nXanomeline Low Dose\n\n\nEthnicity\n\n\n\n\n\n\n    HISPANIC OR LATINO\n6\n7.1%\n\n\n    NOT HISPANIC OR LATINO\n78\n93%\n\n\nFemale\n50\n60%"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#define-custom-function-tbl_cmh",
    "href": "slides/02-tables-gtsummary/index.html#define-custom-function-tbl_cmh",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Define custom function tbl_cmh()",
    "text": "Define custom function tbl_cmh()"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#define-custom-function-tbl_cmh-1",
    "href": "slides/02-tables-gtsummary/index.html#define-custom-function-tbl_cmh-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Define custom function tbl_cmh()",
    "text": "Define custom function tbl_cmh()"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#cobbling-tables-together",
    "href": "slides/02-tables-gtsummary/index.html#cobbling-tables-together",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Cobbling Tables Together",
    "text": "Cobbling Tables Together\n\n\nMost of the tables we create in the pharma space come from a catalog of standard tables.\nCustom or one-off tables are often quite difficult and time intensive to create.\nThe {gtsummary} package makes it simple to break complex tables into their simple parts and cobble them together in the end.\nMoreover, the internal structure of a gtsummary table is super simple: a data frame and instructions on how to print that data frame to make it cute. If needed, you can directly modify the underlying data frame with modify_table_body().\n\n\n\nadsl |&gt; tbl_summary(include = c(AGE, ETHNIC), by = ARM) |&gt; purrr::pluck(\"table_body\")\n\n# A tibble: 4 × 8\n  variable var_type    row_type var_label label                  stat_1      stat_2      stat_3     \n  &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;                  &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;      \n1 AGE      continuous  label    Age       Age                    76 (69, 82) 76 (71, 80) 78 (71, 82)\n2 ETHNIC   categorical label    Ethnicity Ethnicity              &lt;NA&gt;        &lt;NA&gt;        &lt;NA&gt;       \n3 ETHNIC   categorical level    Ethnicity HISPANIC OR LATINO     3 (3.5%)    3 (3.6%)    6 (7.1%)   \n4 ETHNIC   categorical level    Ethnicity NOT HISPANIC OR LATINO 83 (97%)    81 (96%)    78 (93%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-first-tables-1",
    "href": "slides/02-tables-gtsummary/index.html#ard-first-tables-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nSimilar to functions that accept a data frame, the package exports functions with nearly identical APIs that accept an ARD.\n\n\ntbl_summary()\n\ntbl_hierarchical()\n\ntbl_continuous()\n\ntbl_wide_summary()\n\ntbl_ard_summary()\n\ntbl_ard_hierarchical()\n\ntbl_ard_continuous()\n\ntbl_ard_wide_summary()"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-first-tables-2",
    "href": "slides/02-tables-gtsummary/index.html#ard-first-tables-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can use the skills we learned earlier today to create ARDs for gtsummary tables.\n\n\nlibrary(cards)\n\nard &lt;- ard_stack(\n  data = adsl, \n  ard_summary(variables = AGE),\n  ard_tabulate(variables = ETHNIC),\n  ard_tabulate_value(variables = FEMALE),\n  # add these for best-looking tables\n  .attributes = TRUE, \n  .missing = TRUE \n)\nard\n\n\n{cards} data frame: 38 x 9\n\n\n   variable variable_level  context stat_name stat_label   stat\n1       AGE                 summary         N          N    254\n2       AGE                 summary      mean       Mean 75.087\n3       AGE                 summary        sd         SD  8.246\n4       AGE                 summary    median     Median     77\n5       AGE                 summary       p25         Q1     70\n6       AGE                 summary       p75         Q3     81\n7       AGE                 summary       min        Min     51\n8       AGE                 summary       max        Max     89\n9    ETHNIC      HISPANIC… tabulate         n          n     12\n10   ETHNIC      HISPANIC… tabulate         N          N    254\n\n\nℹ 28 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\nThe .attributes=TRUE call adds column attributes, like labels, to the ARD table, which leads to better defaults by displaying the column labels in the table."
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-first-tables-3",
    "href": "slides/02-tables-gtsummary/index.html#ard-first-tables-3",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can simply use the ARD from the previous slide, and pass it to tbl_ard_summary() for a summary table.\n\n\ntbl_ard_summary(ard)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\n\n\n\n\nAge\n77.0 (70.0, 81.0)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n242 (95.3%)\n\n\nFemale\n143 (56.3%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-first-tables-4",
    "href": "slides/02-tables-gtsummary/index.html#ard-first-tables-4",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nNow let’s try a somewhat more complicated table.\n\nadsl |&gt; \n  labelled::set_variable_labels(AGE = \"Age, years\") |&gt; \n  ard_stack( \n    .by = ARM,\n    ard_continuous(\n      variables = AGE,\n      fmt_fn = AGE ~ list(sd = 2)\n    ),\n    ard_categorical(variables = ETHNIC),\n    ard_dichotomous(variables = FEMALE),\n    # add these for best-looking tables\n    .attributes = TRUE, \n    .missing = TRUE \n  ) |&gt; \n  tbl_ard_summary(\n    by = ARM,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    missing = \"no\"\n  ) |&gt; \n  modify_caption(\"**Table 1. Subject Demographics**\")"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-first-tables-4-output",
    "href": "slides/02-tables-gtsummary/index.html#ard-first-tables-4-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\n\n\n\n\n\nTable 1. Subject Demographics\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo1\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nAge, years\n\n\n\n\n\n\n\n\n    Mean (SD)\n75.2 (8.59)\n74.4 (7.89)\n75.7 (8.29)\n\n\n    Min - Max\n52.0 - 89.0\n56.0 - 88.0\n51.0 - 88.0\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (96.5%)\n81 (96.4%)\n78 (92.9%)\n\n\nFemale\n53 (61.6%)\n40 (47.6%)\n50 (59.5%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-first-table-shells",
    "href": "slides/02-tables-gtsummary/index.html#ard-first-table-shells",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\nadsl |&gt; \n  labelled::set_variable_labels(AGE = \"Age, years\") |&gt; \n  ard_stack( \n    .by = ARM,\n    ard_categorical(variables = ETHNIC),\n    # add these for best-looking tables\n    .attributes = TRUE, \n    .missing = TRUE \n  ) |&gt; \n  cards::update_ard_fmt_fun(stat_names = c(\"n\", \"p\"), fmt_fun = \\(x) \"xx\") |&gt; \n  tbl_ard_summary(\n    by = ARM,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    missing = \"no\"\n  ) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**  \\nN = xx\")\n\n\n\n\nYou can also pass ARDs created with the cards::mock_*() functions if no data are available."
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#ard-first-table-shells-output",
    "href": "slides/02-tables-gtsummary/index.html#ard-first-table-shells-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo\nN = xx1\nXanomeline High Dose\nN = xx1\nXanomeline Low Dose\nN = xx1\n\n\n\n\nEthnicity\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\nxx (xx%)\nxx (xx%)\nxx (xx%)\n\n\n    NOT HISPANIC OR LATINO\nxx (xx%)\nxx (xx%)\nxx (xx%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} print engines",
    "text": "{gtsummary} print engines"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-print-engines-2",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-print-engines-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} print engines",
    "text": "{gtsummary} print engines\nUse any print engine to customize table\n\n\nlibrary(gt)\nadsl |&gt;\n  tbl_summary(include = c(AGE, ETHNIC, FEMALE)) |&gt;\n  as_gt() |&gt;\n  cols_width(label ~ px(300)) |&gt;\n  cols_align(columns = stat_0, \n             align = \"right\")\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2541\n\n\n\n\nAge\n77 (70, 81)\n\n\nEthnicity\n\n\n\n\n    HISPANIC OR LATINO\n12 (4.7%)\n\n\n    NOT HISPANIC OR LATINO\n242 (95%)\n\n\nFemale\n143 (56%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#adopt-gtsummary-with-a-company-theme",
    "href": "slides/02-tables-gtsummary/index.html#adopt-gtsummary-with-a-company-theme",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Adopt {gtsummary} with a company theme",
    "text": "Adopt {gtsummary} with a company theme\n\nA theme is a set of customization preferences that can be easily set and reused.\nThemes control default settings for existing functions\nThemes control more fine-grained customization not available via arguments or helper functions\nEasily use one of the available themes, or create your own"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-default-theme",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-default-theme",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} default theme",
    "text": "{gtsummary} default theme\n\n\nreset_gtsummary_theme()\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Default Theme\"\n  )\n\n\n\n\n\n\nDefault Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A\nN = 981\nDrug B\nN = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-theme_gtsummary_journal",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-theme_gtsummary_journal",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} theme_gtsummary_journal()",
    "text": "{gtsummary} theme_gtsummary_journal()\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_journal(journal = \"jama\")\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Journal Theme (JAMA)\"\n  )\n\n\n\n\n\n\nJournal Theme (JAMA)\n\n\n\n\n\n\n\nCharacteristic\nDrug A\nN = 98\nDrug B\nN = 102\n\n\n\n\nAge, Median (IQR)\n46 (37 – 60)\n48 (39 – 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response, n (%)\n28 (29)\n33 (34)\n\n\n    Unknown\n3\n4"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-theme_gtsummary_language",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-theme_gtsummary_language",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} theme_gtsummary_language()",
    "text": "{gtsummary} theme_gtsummary_language()\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_language(language = \"zh-tw\")\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  add_p() |&gt; \n  modify_caption(\n    \"Language Theme (Chinese)\"\n  )\n\n\n\n\n\n\nLanguage Theme (Chinese)\n\n\n\n\n\n\n\n\n特色\nDrug A\nN = 981\nDrug B\nN = 1021\nP 值2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    未知\n7\n4\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    未知\n3\n4\n\n\n\n\n\n1 中位數 (Q1, Q3); n (%)\n\n\n2 Wilcoxon 排序和檢定; 卡方 獨立性檢定\n\n\n\n\n\n\n\n\nLanguage options:\n\n\n\nGerman\nEnglish\nSpanish\nFrench\nGujarati\nHindi\n\n\n\nIcelandic\nJapanese\nKorean\nMarathi\nDutch\n\n\n\nNorwegian\nPortuguese\nSwedish\nChinese Simplified\nChinese Traditional"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-theme_gtsummary_compact",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-theme_gtsummary_compact",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} theme_gtsummary_compact()",
    "text": "{gtsummary} theme_gtsummary_compact()\n\nreset_gtsummary_theme()\ntheme_gtsummary_compact()\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\"Compact Theme\")\n\n\n\n\n\nCompact Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A\nN = 981\nDrug B\nN = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\nReduces padding and font size\nLearn more at http://www.danieldsjoberg.com/gtsummary/articles/themes.html"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#a-pharma-theme-with-crane",
    "href": "slides/02-tables-gtsummary/index.html#a-pharma-theme-with-crane",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "A pharma theme with {crane}",
    "text": "A pharma theme with {crane}\n\n\nAt Roche, we’ve create a companion R package to {gtsummary}. The package exports a theme for our company: crane::theme_gtsummary_roche().\n\n\n\n\nSets a custom function for rounding percentages.\nRound all p-values to four decimal places.\nAdds post-processing to report 0 instead of 0 (0%).\nAll tables are printed with {flextable} and we add Roche-specific styling to the table."
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#what-else-is-in-crane",
    "href": "slides/02-tables-gtsummary/index.html#what-else-is-in-crane",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\nThe package also exports functions to create common tables in the Roche TLG catalog.\nThe tbl_roche_summary() function is a simple wrapper for tbl_summary(), but with Roche defaults\n\n\nlibrary(crane)\ntheme_gtsummary_roche()\ntheme_gtsummary_printer(\"gt\") # let's keep gt for printing tables \n\nadsl |&gt; \n  dplyr::mutate(ETHNIC = forcats::fct_expand(ETHNIC, \"REFUSED\")) |&gt; \n  tbl_roche_summary(by = ARM, include = c(AGE, ETHNIC))\n\n\n\nTable 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlacebo\n(N = 86)\nXanomeline High Dose\n(N = 84)\nXanomeline Low Dose\n(N = 84)\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Median\n76\n76\n78\n\n\n    Min - Max\n52 - 89\n56 - 88\n51 - 88\n\n\nETHNIC\n\n\n\n\n\n\n\n\n    HISPANIC OR LATINO\n3 (3.5%)\n3 (3.6%)\n6 (7.1%)\n\n\n    NOT HISPANIC OR LATINO\n83 (96.5%)\n81 (96.4%)\n78 (92.9%)\n\n\n    REFUSED\n0\n0\n0"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#what-else-is-in-crane-1",
    "href": "slides/02-tables-gtsummary/index.html#what-else-is-in-crane-1",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\nAt Roche, we report AEs differently than what you find in the FDA, so we export tbl_hierarchical_rate_and_count() that combines results from tbl_hierarchical() and tbl_hierarchical_count().\n\n\nadae |&gt; \n  tbl_hierarchical_rate_and_count(\n    by = ARM,\n    variables = c(AESOC, AEDECOD),\n    denominator = adsl\n  ) |&gt;\n  add_overall(last = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class\n    Dictionary-Derived Term\nPlacebo\n(N = 86)\nXanomeline High Dose\n(N = 84)\nXanomeline Low Dose\n(N = 84)\nAll Participants\n(N = 254)\n\n\n\n\nTotal number of participants with at least one adverse event\n5 (5.8%)\n5 (6.0%)\n3 (3.6%)\n13 (5.1%)\n\n\nOverall total number of events\n6\n10\n5\n21\n\n\nCARDIAC DISORDERS\n\n\n\n\n\n\n\n\n\n\n    Total number of participants with at least one adverse event\n4 (4.7%)\n5 (6.0%)\n3 (3.6%)\n12 (4.7%)\n\n\n    Total number of events\n4\n10\n5\n19\n\n\n    ATRIAL FLUTTER\n0\n1 (1.2%)\n1 (1.2%)\n2 (0.8%)\n\n\n    MYOCARDIAL INFARCTION\n4 (4.7%)\n4 (4.8%)\n2 (2.4%)\n10 (3.9%)\n\n\nEYE DISORDERS\n\n\n\n\n\n\n\n\n\n\n    Total number of participants with at least one adverse event\n1 (1.2%)\n0\n0\n1 (0.4%)\n\n\n    Total number of events\n2\n0\n0\n2\n\n\n    EYE ALLERGY\n1 (1.2%)\n0\n0\n1 (0.4%)\n\n\n    EYE SWELLING\n1 (1.2%)\n0\n0\n1 (0.4%)"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#what-else-is-in-crane-2",
    "href": "slides/02-tables-gtsummary/index.html#what-else-is-in-crane-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\nLab values that are summarized by visit and include the change from baseline as well. This is a simple table that is just a tbl_merge() of the AVAL summary and the CHG summary. But the general structure appears enough times in our catalog, we make it simple for our programmers to create.\n\n\nadlb |&gt; \n  dplyr::filter(PARAM == \"Albumin (g/L)\") |&gt; \n  tbl_baseline_chg(\n    by = \"ARM\",\n    baseline_level = \"Baseline\",\n    denominator = adsl\n  )"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#what-else-is-in-crane-2-output",
    "href": "slides/02-tables-gtsummary/index.html#what-else-is-in-crane-2-output",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "What else is in {crane}? ",
    "text": "What else is in {crane}? \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisit\n\nPlacebo\n(N = 86)\n\n\nXanomeline High Dose\n(N = 84)\n\n\nXanomeline Low Dose\n(N = 84)\n\n\n\nValue at Visit\nChange from Baseline\nValue at Visit\nChange from Baseline\nValue at Visit\nChange from Baseline\n\n\n\n\nBaseline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    n\n86\n\n\n84\n\n\n82\n\n\n\n\n    Mean (SD)\n39.84 (2.81)\n\n\n40.29 (2.84)\n\n\n39.77 (2.56)\n\n\n\n\n    Median\n40.00\n\n\n40.00\n\n\n40.00\n\n\n\n\n    Min - Max\n32.00 - 46.00\n\n\n32.00 - 49.00\n\n\n32.00 - 46.00\n\n\n\n\nWeek 12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    n\n67\n67\n50\n50\n51\n51\n\n\n    Mean (SD)\n39.48 (3.49)\n-0.34 (2.39)\n39.80 (2.45)\n-0.70 (2.73)\n38.86 (2.18)\n-0.88 (2.12)\n\n\n    Median\n40.00\n0.00\n39.50\n-1.00\n39.00\n-1.00\n\n\n    Min - Max\n28.00 - 47.00\n-6.00 - 6.00\n35.00 - 44.00\n-7.00 - 6.00\n31.00 - 44.00\n-7.00 - 4.00\n\n\nWeek 24\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    n\n57\n57\n30\n30\n26\n26\n\n\n    Mean (SD)\n39.67 (3.34)\n-0.04 (2.90)\n40.53 (2.10)\n-0.57 (2.65)\n40.38 (2.52)\n0.54 (2.39)\n\n\n    Median\n40.00\n0.00\n41.00\n-1.00\n40.50\n1.00\n\n\n    Min - Max\n29.00 - 46.00\n-10.00 - 6.00\n35.00 - 44.00\n-5.00 - 8.00\n32.00 - 45.00\n-5.00 - 4.00"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#cardinal-collaboration",
    "href": "slides/02-tables-gtsummary/index.html#cardinal-collaboration",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "cardinal collaboration ",
    "text": "cardinal collaboration \nThe cardinal initiative is an industry collaborative effort under the pharmaverse.\nThe site includes examples for building ARDs and tables from the FDA Standard Safety Tables and Figures Integrated Guide using {cards} and {gtsummary}.\n Let’s Go!"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#gtsummary-website",
    "href": "slides/02-tables-gtsummary/index.html#gtsummary-website",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "{gtsummary} website",
    "text": "{gtsummary} website\nhttp://www.danieldsjoberg.com/gtsummary/"
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#section-2",
    "href": "slides/02-tables-gtsummary/index.html#section-2",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "",
    "text": "Package Authors/Contributors\n\nDaniel D. Sjoberg\nJoseph Larmarange\nMichael Curry\nJessica Lavery\nKarissa Whiting\nEmily C. Zabor\nXing Bai\nEsther Drill\nJessica Flynn\nMargie Hannum\nStephanie Lobaugh\nShannon Pileggi\nAmy Tin\nGustavo Zapata Wainberg\n\n\nOther Contributors\n\n@abduazizR, @ablack3, @ABohynDOE, @ABorakati, @adilsonbauhofer, @aghaynes, @ahinton-mmc, @aito123, @akarsteve, @akefley, @albamrt, @albertostefanelli, @alecbiom, @alexandrayas, @alexis-catherine, @AlexZHENGH, @alnajar, @amygimma, @anaavu, @anddis, @andrader, @Andrzej-Andrzej, @angelgar, @arbet003, @arnmayer, @aspina7, @AurelienDasre, @awcm0n, @ayogasekaram, @barretmonchka, @barthelmes, @bc-teixeira, @bcjaeger, @BeauMeche, @benediktclaus, @benwhalley, @berg-michael, @bhattmaulik, @BioYork, @blue-abdur, @brachem-christian, @brianmsm, @browne123, @bwiernik, @bx259, @calebasaraba, @CarolineXGao, @CharlyMarie, @ChongTienGoh, @Chris-M-P, @chrisleitzinger, @cjprobst, @ClaudiaCampani, @clmawhorter, @CodieMonster, @coeusanalytics, @coreysparks, @CorradoLanera, @crystalluckett-sanofi, @ctlamb, @dafxy, @DanChaltiel, @DanielPark-MGH, @davideyre, @davidgohel, @davidkane9, @DavisVaughan, @dax44, @dchiu911, @ddsjoberg, @DeFilippis, @denis-or, @dereksonderegger, @derekstein, @DesiQuintans, @dieuv0, @dimbage, @discoleo, @djbirke, @dmenne, @DrDinhLuong, @edelarua, @edrill, @Eduardo-Auer, @ElfatihHasabo, @emilyvertosick, @eokoshi, @ercbk, @eremingt, @erikvona, @eugenividal, @eweisbrod, @fdehrich, @feizhadj, @fh-jsnider, @fh-mthomson, @FrancoisGhesquiere, @ge-generation, @Generalized, @ghost, @giorgioluciano, @giovannitinervia9, @gjones1219, @gorkang, @GuiMarthe, @gungorMetehan, @hass91, @hescalar, @HichemLa, @hichew22, @hr70, @huftis, @hughjonesd, @iaingallagher, @ilyamusabirov, @IndrajeetPatil, @irene9116, @IsadoraBM, @j-tamad, @jalavery, @jaromilfrossard, @JBarsotti, @jbtov, @jeanmanguy, @jemus42, @jenifav, @jennybc, @JeremyPasco, @jerrodanzalone, @JesseRop, @jflynn264, @jhchou, @jhelvy, @jhk0530, @jjallaire, @jkylearmstrong, @jmbarajas, @jmbarbone, @JoanneF1229, @joelgautschi, @johnryan412, @JohnSodling, @jonasrekdalmathisen, @JonGretar, @jordan49er, @jsavinc, @jthomasmock, @juseer, @jwilliman, @karissawhiting, @karl-an, @kendonB, @kentm4, @klh281, @kmdono02, @kristyrobledo, @kwakuduahc1, @lamberp6, @lamhine, @larmarange, @ledermanr, @leejasme, @leslem, @levossen, @lngdet, @longjp, @lorenzoFabbri, @loukesio, @love520lfh, @lspeetluk, @ltin1214, @ltj-github, @lucavd, @LucyMcGowan, @LuiNov, @lukejenner6, @maciekbanas, @maia-sh, @malcolmbarrett, @mariamaseng, @Marsus1972, @martsobm, @Mathicaa, @matthieu-faron, @maxanes, @mayazadok2, @mbac, @mdidish, @medewitt, @meenakshi-kushwaha, @melindahiggins2000, @MelissaAssel, @Melkiades, @mfansler, @michaelcurry1123, @mikemazzucco, @mlamias, @mljaniczek, @moleps, @monitoringhsd, @motocci, @mrmvergeer, @msberends, @mvuorre, @myamortor, @myensr, @MyKo101, @nalimilan, @ndunnewind, @nikostr, @ningyile, @O16789, @oliviercailloux, @oranwutang, @palantre, @parmsam, @Pascal-Schmidt, @PaulC91, @paulduf, @pedersebastian, @perlatex, @pgseye, @philippemichel, @philsf, @polc1410, @Polperobis, @postgres-newbie, @proshano, @raphidoc, @RaviBot, @rawand-hanna, @rbcavanaugh, @remlapmot, @rich-iannone, @RiversPharmD, @rmgpanw, @roaldarbol, @roman2023, @ryzhu75, @s-j-choi, @sachijay, @saifelayan, @sammo3182, @samrodgersmelnick, @samuele-mercan, @sandhyapc, @sbalci, @sda030, @shah-in-boots, @shannonpileggi, @shaunporwal, @shengchaohou, @ShixiangWang, @simonpcouch, @slb2240, @slobaugh, @spiralparagon, @Spring75xx, @StaffanBetner, @steenharsted, @stenw, @Stephonomon, @storopoli, @stratopopolis, @strengejacke, @szimmer, @tamytsujimoto, @TAOS25, @TarJae, @themichjam, @THIB20, @tibirkrajc, @tjmeyers, @tldrcharlene, @tormodb, @toshifumikuroda, @TPDeramus, @UAB-BST-680, @uakimix, @uriahf, @Valja64, @viola-hilbert, @violet-nova, @vvm02, @will-gt, @xkcococo, @xtimbeau, @yatirbe, @yihunzeleke, @yonicd, @yoursdearboy, @YousufMohammed2002, @yuryzablotski, @zabore, @zachariae, @zaddyzad, @zawkzaw, @zdz2101, @zeyunlu, @zhangkaicr, @zhaohongxin0, @zheer-kejlberg, @zhengnow, @zhonghua723, @zlkrvsm, @zongell-star, and @Zoulf001."
  },
  {
    "objectID": "slides/02-tables-gtsummary/index.html#thank-you",
    "href": "slides/02-tables-gtsummary/index.html#thank-you",
    "title": "Clinical Reporting with {gtsummary}",
    "section": "Thank you",
    "text": "Thank you\n\n\n\n Ask on stackoverflow.com\n Use the gtsummary tag\n Thousands of posts!\n\n danieldsjoberg.com\n ddsjoberg.bsky.social\n linkedin.com/in/ddsjoberg/\n github.com/ddsjoberg"
  },
  {
    "objectID": "slides/01-ARD/index.html#analysis-results-standard-ars",
    "href": "slides/01-ARD/index.html#analysis-results-standard-ars",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)"
  },
  {
    "objectID": "slides/01-ARD/index.html#analysis-results-standard-ars-1",
    "href": "slides/01-ARD/index.html#analysis-results-standard-ars-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\n\nEmerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/01-ARD/index.html#analysis-results-standard-ars-2",
    "href": "slides/01-ARD/index.html#analysis-results-standard-ars-2",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/01-ARD/index.html#analysis-results-standard-ars-3",
    "href": "slides/01-ARD/index.html#analysis-results-standard-ars-3",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/01-ARD/index.html#analysis-results-data-ard",
    "href": "slides/01-ARD/index.html#analysis-results-data-ard",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nEncodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/01-ARD/index.html#analysis-results-data-ard-1",
    "href": "slides/01-ARD/index.html#analysis-results-data-ard-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/01-ARD/index.html#a-few-notes-about-ards",
    "href": "slides/01-ARD/index.html#a-few-notes-about-ards",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "A few notes about ARDs",
    "text": "A few notes about ARDs\n\nRethinking QC\n\nQC can be focused on the raw value, not the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-introduction",
    "href": "slides/01-ARD/index.html#cards-introduction",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Introduction",
    "text": "{cards}: Introduction\n\nPart of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_summary",
    "href": "slides/01-ARD/index.html#cards-ard_summary",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary()",
    "text": "{cards}: ard_summary()\n\nlibrary(cards)\n\n# create ARD with default summary statistics\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    306       0\n2      AGE summary      mean       Mean 75.088       1\n3      AGE summary        sd         SD  8.494       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     50       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_summary-by-variable",
    "href": "slides/01-ARD/index.html#cards-ard_summary-by-variable",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() by variable",
    "text": "{cards}: ard_summary() by variable\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 32 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Screen F…      AGE         N          N     52\n10    ARM    Screen F…      AGE      mean       Mean 75.096\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_summary-statistics",
    "href": "slides/01-ARD/index.html#cards-ard_summary-statistics",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() statistics",
    "text": "{cards}: ard_summary() statistics\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\npharmaverseadam::adsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Screen F…      AGE        cv         cv 0.129\n3    ARM    Xanomeli…      AGE        cv         cv 0.106\n4    ARM    Xanomeli…      AGE        cv         cv  0.11"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_summary-statistics-1",
    "href": "slides/01-ARD/index.html#cards-ard_summary-statistics-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() statistics",
    "text": "{cards}: ard_summary() statistics\n\nCustomize the statistics returned for each variable\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE        cv         cv  0.114\n2     ARM      Placebo     AGE2      mean       Mean 75.209\n3     ARM      Placebo     AGE2    median     Median     76\n4     ARM    Screen F…      AGE        cv         cv  0.129\n5     ARM    Screen F…     AGE2      mean       Mean 75.096\n6     ARM    Screen F…     AGE2    median     Median     76\n7     ARM    Xanomeli…      AGE        cv         cv  0.106\n8     ARM    Xanomeli…     AGE2      mean       Mean 74.381\n9     ARM    Xanomeli…     AGE2    median     Median     76\n10    ARM    Xanomeli…      AGE        cv         cv   0.11\n11    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n12    ARM    Xanomeli…     AGE2    median     Median   77.5"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_summary-fmt_fun",
    "href": "slides/01-ARD/index.html#cards-ard_summary-fmt_fun",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() fmt_fun",
    "text": "{cards}: ard_summary() fmt_fun\n\nOverride the default formatting functions, method 1:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_summary-fmt_fun-1",
    "href": "slides/01-ARD/index.html#cards-ard_summary-fmt_fun-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_summary() fmt_fun",
    "text": "{cards}: ard_summary() fmt_fun\n\nOverride the default formatting functions, method 2:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fun(stat_names = \"mean\", fmt_fun = 0) |&gt; \n  apply_fmt_fun() \n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_tabulate",
    "href": "slides/01-ARD/index.html#cards-ard_tabulate",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_tabulate()",
    "text": "{cards}: ard_tabulate()\n\n\nincludes n, %, N by default\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_tabulate(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &gt;64         n          n    72\n2     ARM      Placebo   AGEGR1            &gt;64         N          N    86\n3     ARM      Placebo   AGEGR1            &gt;64         p          % 0.837\n4     ARM      Placebo   AGEGR1          18-64         n          n    14\n5     ARM      Placebo   AGEGR1          18-64         N          N    86\n6     ARM      Placebo   AGEGR1          18-64         p          % 0.163\n7     ARM    Screen F…   AGEGR1            &gt;64         n          n    43\n8     ARM    Screen F…   AGEGR1            &gt;64         N          N    52\n9     ARM    Screen F…   AGEGR1            &gt;64         p          % 0.827\n10    ARM    Screen F…   AGEGR1          18-64         n          n     9\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD."
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-other-summary-functions",
    "href": "slides/01-ARD/index.html#cards-other-summary-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Other Summary Functions",
    "text": "{cards}: Other Summary Functions\n\nard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-other-functions",
    "href": "slides/01-ARD/index.html#cards-other-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Other Functions",
    "text": "{cards}: Other Functions\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-stacking-utilities",
    "href": "slides/01-ARD/index.html#cards-stacking-utilities",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking utilities",
    "text": "{cards}: Stacking utilities\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 28 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &gt;64         p          %  0.837\n4     ARM      Placebo   AGEGR1          18-64         p          %  0.163\n5     ARM    Screen F…      AGE                     mean       Mean 75.096\n6     ARM    Screen F…      AGE                       sd         SD    9.7\n7     ARM    Screen F…   AGEGR1            &gt;64         p          %  0.827\n8     ARM    Screen F…   AGEGR1          18-64         p          %  0.173\n9     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n10    ARM    Xanomeli…      AGE                       sd         SD  7.886\n\n\nℹ 18 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/index.html#exercise-together",
    "href": "slides/01-ARD/index.html#exercise-together",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Exercise 🏃‍➡️ (Together!)",
    "text": "Exercise 🏃‍➡️ (Together!)\n\nOpen exercises/04-ARD-partA.R\nCompute summaries for a demography table that includes AGE, SEX, and RACE."
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-hierarchical-summary-functions",
    "href": "slides/01-ARD/index.html#cards-hierarchical-summary-functions",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Hierarchical Summary Functions",
    "text": "{cards}: Hierarchical Summary Functions\nFollowing hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_hierarchical",
    "href": "slides/01-ARD/index.html#cards-ard_hierarchical",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_hierarchical",
    "text": "{cards}: ard_hierarchical\n\nThis function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nard_hierarchical(\n  data = adae |&gt; dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)),\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = ADSL\n)\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n   stat_label  stat\n1           n     9\n2           N    86\n3           % 0.105\n4           n     1\n5           N    86\n6           % 0.012\n7           n     3\n8           N    86\n9           % 0.035\n10          n     3"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-ard_hierarchical_count",
    "href": "slides/01-ARD/index.html#cards-ard_hierarchical_count",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: ard_hierarchical_count",
    "text": "{cards}: ard_hierarchical_count\n\nThis function specializes in calculating event-level frequencies.\n\n\nard_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A\n)\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n   stat_label stat\n1           n   10\n2           n    2\n3           n    3\n4           n    3\n5           n   10\n6           n    2\n7           n   13\n8           n   11\n9           n    0\n10          n    3"
  },
  {
    "objectID": "slides/01-ARD/index.html#hierarchical-summaries-many-ways",
    "href": "slides/01-ARD/index.html#hierarchical-summaries-many-ways",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Hierarchical summaries many ways",
    "text": "Hierarchical summaries many ways\n\nDisplays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-stacking-function-for-ard_hierarchical",
    "href": "slides/01-ARD/index.html#cards-stacking-function-for-ard_hierarchical",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking function for ard_hierarchical()",
    "text": "{cards}: Stacking function for ard_hierarchical()\n\n\nard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = pharmaverseadam::adsl\n)\n\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n   stat_label  stat\n1           n    12\n2           N    86\n3           %  0.14\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     3\n11          N    86\n12          % 0.035"
  },
  {
    "objectID": "slides/01-ARD/index.html#cards-stacking-function-for-ard_hierarchical_count",
    "href": "slides/01-ARD/index.html#cards-stacking-function-for-ard_hierarchical_count",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cards}: Stacking function for ard_hierarchical_count()",
    "text": "{cards}: Stacking function for ard_hierarchical_count()\n\n\nBelow is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A, \n  denominator = pharmaverseadam::adsl\n)\n\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n  stat_label stat\n1          n   15\n2          n   10\n3          n    2\n4          n    3"
  },
  {
    "objectID": "slides/01-ARD/index.html#exercise",
    "href": "slides/01-ARD/index.html#exercise",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "Exercise 🏃‍➡️",
    "text": "Exercise 🏃‍➡️\n\nOpen exercises/04-ARD-partB.R\nCompute the nested AE tabulations as described\n\n\n\n\n−+\n08:00"
  },
  {
    "objectID": "slides/01-ARD/index.html#cardx",
    "href": "slides/01-ARD/index.html#cardx",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx}",
    "text": "{cardx}\n\nExtension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/01-ARD/index.html#cardx-1",
    "href": "slides/01-ARD/index.html#cardx-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx}",
    "text": "{cardx}\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/01-ARD/index.html#cardx-t-test-example",
    "href": "slides/01-ARD/index.html#cardx-t-test-example",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/index.html#cardx-t-test-example-1",
    "href": "slides/01-ARD/index.html#cardx-t-test-example-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.024       1\n2      AGE t_test_o…   statistic  statistic     120.2       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       167       1\n5      AGE t_test_o…    conf.low   conf.low    73.792       1\n6      AGE t_test_o…   conf.high  conf.high    76.256       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/01-ARD/index.html#cardx-t-test-example-2",
    "href": "slides/01-ARD/index.html#cardx-t-test-example-2",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\nHow to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/index.html#cardx-regression",
    "href": "slides/01-ARD/index.html#cardx-regression",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} Regression",
    "text": "{cardx} Regression\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), quantreg::rq(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/01-ARD/index.html#cardx-regression-1",
    "href": "slides/01-ARD/index.html#cardx-regression-1",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "{cardx} Regression",
    "text": "{cardx} Regression\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\nlm(AGE ~ ARM, data = cards::ADSL) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n   variable variable_level   context      stat_name stat_label      stat\n1       ARM        Placebo regressi…           term       term ARMPlace…\n2       ARM        Placebo regressi…      var_label      Label Descript…\n3       ARM        Placebo regressi…      var_class      Class character\n4       ARM        Placebo regressi…       var_type       Type categori…\n5       ARM        Placebo regressi…    var_nlevels   N Levels         3\n6       ARM        Placebo regressi…      contrasts  contrasts contr.tr…\n7       ARM        Placebo regressi… contrasts_type  Contrast… treatment\n8       ARM        Placebo regressi…  reference_row  referenc…      TRUE\n9       ARM        Placebo regressi…          label  Level La…   Placebo\n10      ARM        Placebo regressi…          n_obs     N Obs.        86"
  },
  {
    "objectID": "slides/01-ARD/index.html#when-things-go-wrong",
    "href": "slides/01-ARD/index.html#when-things-go-wrong",
    "title": "ARDs (Analysis Results Datasets) in R",
    "section": "When things go wrong 😱",
    "text": "When things go wrong 😱\nWhat happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_summary(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution 4.0 International License.",
    "crumbs": [
      "License"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ARDs + AI: Building the Future of Clinical Reporting with {gtsummary} and {cards}",
    "section": "",
    "text": "🗓️ November 6, 2025 11:00AM - 12:30PM\n🏨 Crowne Plaza Hotel, Foster City, CA\n📝 Workshop Registration",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "ARDs + AI: Building the Future of Clinical Reporting with {gtsummary} and {cards}",
    "section": "Description",
    "text": "Description\nAs the pharmaceutical field moves to open-source solutions for reporting on clinical trials, assessing and vetting the options available becomes increasingly important. The {gtsummary} R package is the most widely used tool in the R ecosystem for creating publication-ready summary tables. Its recent integration with the Analysis Results Dataset (ARD) framework represents a major advance for clinical trial reporting. ARDs, which standardize statistical outputs in a machine-readable format, can be robustly generated using the open-source {cards} package developed by Roche, GSK, Novartis, Eli Lilly, Pfizer, and Clymb.\nIn this seminar, attendees will learn about ARDs and how can fit into the larger CDISC-proposed Analysis Results Standard, get hands-on experience using {cards} to build ARDs for both simple and complex statistical summaries, create summary tables using the {gtsummary} package, and learn how utilizing these packages together also makes programmatic quality control of TLGs a simple task.\nLastly, we will review how this ecosystem naturally lends itself to Large Language Models (LLMs). Because {gtsummary} is so widely adopted, LLMs can generate complex {gtsummary} code without additional training. Additionally, LLMs can readily interpret our structured ARDs to assist medical writers summarizing both simple and sophisticated trial results.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#pre-work",
    "href": "index.html#pre-work",
    "title": "ARDs + AI: Building the Future of Clinical Reporting with {gtsummary} and {cards}",
    "section": "Pre-work",
    "text": "Pre-work\n\nBookmark this site. You’ll reference it throughout the workshop. \nBring your laptop and charger to the workshop.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instructor",
    "href": "index.html#instructor",
    "title": "ARDs + AI: Building the Future of Clinical Reporting with {gtsummary} and {cards}",
    "section": "Instructor",
    "text": "Instructor\n\nDaniel D. Sjoberg (he/him) is a Senior Principal Data Scientist at Genentech. Previously, he was a Lead Data Science Manager at the Prostate Cancer Clinical Trials Consortium, and a Senior Biostatistician at Memorial Sloan Kettering Cancer Center in New York City. He enjoys R package development, creating many packages available on CRAN, R-Universe, and GitHub. He’s a co-organizer of rainbowR (a community that supports, promotes and connects LGBTQ+ people who code in the R language) and of the R Medicine Conference. His research interests include adaptive methods in clinical trials, precision medicine, and predictive modeling. Daniel is the winner of the 2021 American Statistical Association (ASA) Innovation in Statistical Programming and Analytics award.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "slides/01-ARD/cards.html",
    "href": "slides/01-ARD/cards.html",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯\n\n\n\n\n\nlibrary(cards)\n\n# create ARD with default summary statistics\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    306       0\n2      AGE summary      mean       Mean 75.088       1\n3      AGE summary        sd         SD  8.494       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     50       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 32 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Screen F…      AGE         N          N     52\n10    ARM    Screen F…      AGE      mean       Mean 75.096\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\npharmaverseadam::adsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 4 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Screen F…      AGE        cv         cv 0.129\n3    ARM    Xanomeli…      AGE        cv         cv 0.106\n4    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nCustomize the statistics returned for each variable\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 12 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE        cv         cv  0.114\n2     ARM      Placebo     AGE2      mean       Mean 75.209\n3     ARM      Placebo     AGE2    median     Median     76\n4     ARM    Screen F…      AGE        cv         cv  0.129\n5     ARM    Screen F…     AGE2      mean       Mean 75.096\n6     ARM    Screen F…     AGE2    median     Median     76\n7     ARM    Xanomeli…      AGE        cv         cv  0.106\n8     ARM    Xanomeli…     AGE2      mean       Mean 74.381\n9     ARM    Xanomeli…     AGE2    median     Median     76\n10    ARM    Xanomeli…      AGE        cv         cv   0.11\n11    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n12    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nOverride the default formatting functions, method 1:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nOverride the default formatting functions, method 2:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fun(stat_names = \"mean\", fmt_fun = 0) |&gt; \n  apply_fmt_fun() \n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nincludes n, %, N by default\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_tabulate(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &gt;64         n          n    72\n2     ARM      Placebo   AGEGR1            &gt;64         N          N    86\n3     ARM      Placebo   AGEGR1            &gt;64         p          % 0.837\n4     ARM      Placebo   AGEGR1          18-64         n          n    14\n5     ARM      Placebo   AGEGR1          18-64         N          N    86\n6     ARM      Placebo   AGEGR1          18-64         p          % 0.163\n7     ARM    Screen F…   AGEGR1            &gt;64         n          n    43\n8     ARM    Screen F…   AGEGR1            &gt;64         N          N    52\n9     ARM    Screen F…   AGEGR1            &gt;64         p          % 0.827\n10    ARM    Screen F…   AGEGR1          18-64         n          n     9\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\n\n\nard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞\n\n\n\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc.\n\n\n\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 28 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &gt;64         p          %  0.837\n4     ARM      Placebo   AGEGR1          18-64         p          %  0.163\n5     ARM    Screen F…      AGE                     mean       Mean 75.096\n6     ARM    Screen F…      AGE                       sd         SD    9.7\n7     ARM    Screen F…   AGEGR1            &gt;64         p          %  0.827\n8     ARM    Screen F…   AGEGR1          18-64         p          %  0.173\n9     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n10    ARM    Xanomeli…      AGE                       sd         SD  7.886\n\n\nℹ 18 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nOpen exercises/04-ARD-partA.R\nCompute summaries for a demography table that includes AGE, SEX, and RACE.\n\n\n\n\nFollowing hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts\n\n\n\n\n\nThis function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nard_hierarchical(\n  data = adae |&gt; dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)),\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = ADSL\n)\n\n{cards} data frame: 81 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n   stat_label  stat\n1           n     9\n2           N    86\n3           % 0.105\n4           n     1\n5           N    86\n6           % 0.012\n7           n     3\n8           N    86\n9           % 0.035\n10          n     3\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nThis function specializes in calculating event-level frequencies.\n\n\nard_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A\n)\n\n{cards} data frame: 27 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n   stat_label stat\n1           n   10\n2           n    2\n3           n    3\n4           n    3\n5           n   10\n6           n    2\n7           n   13\n8           n   11\n9           n    0\n10          n    3\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nDisplays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?\n\n\n\n\n\n\n\nard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = pharmaverseadam::adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n   stat_label  stat\n1           n    12\n2           N    86\n3           %  0.14\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     3\n11          N    86\n12          % 0.035\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\n\nBelow is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A, \n  denominator = pharmaverseadam::adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n  stat_label stat\n1          n   15\n2          n   10\n3          n    2\n4          n    3\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\n\n\n\nOpen exercises/04-ARD-partB.R\nCompute the nested AE tabulations as described\n\n\n\n\n−+\n08:00\n\n\n\n\n\n\n\nExtension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods.\n\n\n\n\n\n\n\n\n\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱\n\n\n\n\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.024       1\n2      AGE t_test_o…   statistic  statistic     120.2       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       167       1\n5      AGE t_test_o…    conf.low   conf.low    73.792       1\n6      AGE t_test_o…   conf.high  conf.high    76.256       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\nHow to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), quantreg::rq(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)\n\n\n\n\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\nlm(AGE ~ ARM, data = cards::ADSL) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n{cards} data frame: 43 x 9\n\n\n   variable variable_level   context      stat_name stat_label      stat\n1       ARM        Placebo regressi…           term       term ARMPlace…\n2       ARM        Placebo regressi…      var_label      Label Descript…\n3       ARM        Placebo regressi…      var_class      Class character\n4       ARM        Placebo regressi…       var_type       Type categori…\n5       ARM        Placebo regressi…    var_nlevels   N Levels         3\n6       ARM        Placebo regressi…      contrasts  contrasts contr.tr…\n7       ARM        Placebo regressi… contrasts_type  Contrast… treatment\n8       ARM        Placebo regressi…  reference_row  referenc…      TRUE\n9       ARM        Placebo regressi…          label  Level La…   Placebo\n10      ARM        Placebo regressi…          n_obs     N Obs.        86\n\n\nℹ 33 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error\n\n\n\n\n\nWhat happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_summary(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-introduction",
    "href": "slides/01-ARD/cards.html#cards-introduction",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, Eli Lilly, Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n36k downloads per month 🤯"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_summary",
    "href": "slides/01-ARD/cards.html#cards-ard_summary",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "library(cards)\n\n# create ARD with default summary statistics\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable context stat_name stat_label   stat fmt_fun\n1      AGE summary         N          N    306       0\n2      AGE summary      mean       Mean 75.088       1\n3      AGE summary        sd         SD  8.494       1\n4      AGE summary    median     Median     77       1\n5      AGE summary       p25         Q1     70       1\n6      AGE summary       p75         Q3     81       1\n7      AGE summary       min        Min     50       1\n8      AGE summary       max        Max     89       1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_summary-by-variable",
    "href": "slides/01-ARD/cards.html#cards-ard_summary-by-variable",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "by: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 32 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Screen F…      AGE         N          N     52\n10    ARM    Screen F…      AGE      mean       Mean 75.096\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_summary-statistics",
    "href": "slides/01-ARD/cards.html#cards-ard_summary-statistics",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "statistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\npharmaverseadam::adsl |&gt; \n  ard_summary(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 4 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Screen F…      AGE        cv         cv 0.129\n3    ARM    Xanomeli…      AGE        cv         cv 0.106\n4    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_summary-statistics-1",
    "href": "slides/01-ARD/cards.html#cards-ard_summary-statistics-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Customize the statistics returned for each variable\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_summary(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 12 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE        cv         cv  0.114\n2     ARM      Placebo     AGE2      mean       Mean 75.209\n3     ARM      Placebo     AGE2    median     Median     76\n4     ARM    Screen F…      AGE        cv         cv  0.129\n5     ARM    Screen F…     AGE2      mean       Mean 75.096\n6     ARM    Screen F…     AGE2    median     Median     76\n7     ARM    Xanomeli…      AGE        cv         cv  0.106\n8     ARM    Xanomeli…     AGE2      mean       Mean 74.381\n9     ARM    Xanomeli…     AGE2    median     Median     76\n10    ARM    Xanomeli…      AGE        cv         cv   0.11\n11    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n12    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_summary-fmt_fun",
    "href": "slides/01-ARD/cards.html#cards-ard_summary-fmt_fun",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Override the default formatting functions, method 1:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fun = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fun() # add a character column of rounded results\n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_summary-fmt_fun-1",
    "href": "slides/01-ARD/cards.html#cards-ard_summary-fmt_fun-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Override the default formatting functions, method 2:\n\n\npharmaverseadam::adsl |&gt; \n  ard_summary(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fun(stat_names = \"mean\", fmt_fun = 0) |&gt; \n  apply_fmt_fun() \n\n{cards} data frame: 32 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Screen F…      AGE         N          N     52       52\n10    ARM    Screen F…      AGE      mean       Mean 75.096       75\n\n\nℹ 22 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_tabulate",
    "href": "slides/01-ARD/cards.html#cards-ard_tabulate",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "includes n, %, N by default\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_tabulate(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &gt;64         n          n    72\n2     ARM      Placebo   AGEGR1            &gt;64         N          N    86\n3     ARM      Placebo   AGEGR1            &gt;64         p          % 0.837\n4     ARM      Placebo   AGEGR1          18-64         n          n    14\n5     ARM      Placebo   AGEGR1          18-64         N          N    86\n6     ARM      Placebo   AGEGR1          18-64         p          % 0.163\n7     ARM    Screen F…   AGEGR1            &gt;64         n          n    43\n8     ARM    Screen F…   AGEGR1            &gt;64         N          N    52\n9     ARM    Screen F…   AGEGR1            &gt;64         p          % 0.827\n10    ARM    Screen F…   AGEGR1          18-64         n          n     9\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD."
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-other-summary-functions",
    "href": "slides/01-ARD/cards.html#cards-other-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_hierarchical(): similar to ard_tabulate(), but built for nested tabulations, e.g. AE terms within SOC\nard_mvsummary(): similar to ard_summary(), for multivariate summaries. The function accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-other-functions",
    "href": "slides/01-ARD/cards.html#cards-other-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "In addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-stacking-utilities",
    "href": "slides/01-ARD/cards.html#cards-stacking-utilities",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "data and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\npharmaverseadam::adsl |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_summary(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_tabulate(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 28 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &gt;64         p          %  0.837\n4     ARM      Placebo   AGEGR1          18-64         p          %  0.163\n5     ARM    Screen F…      AGE                     mean       Mean 75.096\n6     ARM    Screen F…      AGE                       sd         SD    9.7\n7     ARM    Screen F…   AGEGR1            &gt;64         p          %  0.827\n8     ARM    Screen F…   AGEGR1          18-64         p          %  0.173\n9     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n10    ARM    Xanomeli…      AGE                       sd         SD  7.886\n\n\nℹ 18 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#exercise-together",
    "href": "slides/01-ARD/cards.html#exercise-together",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Open exercises/04-ARD-partA.R\nCompute summaries for a demography table that includes AGE, SEX, and RACE."
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-hierarchical-summary-functions",
    "href": "slides/01-ARD/cards.html#cards-hierarchical-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Following hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_hierarchical",
    "href": "slides/01-ARD/cards.html#cards-ard_hierarchical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "This function specializes in calculating subject-level rates.\n\nRates computed on lowest level variables, nested within others\nid helps to check that no duplicate rows exist within the c(id, variables) columns\ndenominator dictates the denominator for the rates\n\n\n\nard_hierarchical(\n  data = adae |&gt; dplyr::slice_tail(n = 1L, by = c(USUBJID, ARM, AESOC, AEDECOD)),\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = ADSL\n)\n\n{cards} data frame: 81 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n10 TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n   stat_label  stat\n1           n     9\n2           N    86\n3           % 0.105\n4           n     1\n5           N    86\n6           % 0.012\n7           n     3\n8           N    86\n9           % 0.035\n10          n     3\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-ard_hierarchical_count",
    "href": "slides/01-ARD/cards.html#cards-ard_hierarchical_count",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "This function specializes in calculating event-level frequencies.\n\n\nard_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A\n)\n\n{cards} data frame: 27 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n2  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n3  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n4  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n5  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD      APPLICAT…         n\n6  TRT01A      Placebo  AESOC    GENERAL …  AEDECOD        FATIGUE         n\n7  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       ERYTHEMA         n\n8  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD       PRURITUS         n\n9  TRT01A      Placebo  AESOC    SKIN AND…  AEDECOD      PRURITUS…         n\n10 TRT01A    Xanomeli…  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n   stat_label stat\n1           n   10\n2           n    2\n3           n    3\n4           n    3\n5           n   10\n6           n    2\n7           n   13\n8           n   11\n9           n    0\n10          n    3\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#hierarchical-summaries-many-ways",
    "href": "slides/01-ARD/cards.html#hierarchical-summaries-many-ways",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Displays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nThis can mean several calls to the ard_hierarchical_* functions\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\n\n\n\nIs there an easier way?"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-stacking-function-for-ard_hierarchical",
    "href": "slides/01-ARD/cards.html#cards-stacking-function-for-ard_hierarchical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_hierarchical stacking functions simplify this multi-step process into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A,\n  id = USUBJID,\n  denominator = pharmaverseadam::adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3  TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n8  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n9  TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n10 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n11 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         N\n12 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         p\n   stat_label  stat\n1           n    12\n2           N    86\n3           %  0.14\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     3\n11          N    86\n12          % 0.035\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cards-stacking-function-for-ard_hierarchical_count",
    "href": "slides/01-ARD/cards.html#cards-stacking-function-for-ard_hierarchical_count",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Below is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRT01A, \n  denominator = pharmaverseadam::adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1 TRT01A      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n4 TRT01A      Placebo  AESOC    GASTROIN…  AEDECOD       VOMITING         n\n  stat_label stat\n1          n   15\n2          n   10\n3          n    2\n4          n    3\n\n\nℹ 4 more variables: context, fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#exercise",
    "href": "slides/01-ARD/cards.html#exercise",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Open exercises/04-ARD-partB.R\nCompute the nested AE tabulations as described\n\n\n\n\n−+\n08:00"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cardx",
    "href": "slides/01-ARD/cards.html#cardx",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Extension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/01-ARD/cards.html#cardx-1",
    "href": "slides/01-ARD/cards.html#cardx-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Exports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cardx-t-test-example",
    "href": "slides/01-ARD/cards.html#cardx-t-test-example",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "We see the results like the mean difference, the confidence interval, and p-value as expected.\nAnd we also see the function’s inputs, which is incredibly useful for re-use, e.g. we know the we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cardx-t-test-example-1",
    "href": "slides/01-ARD/cards.html#cardx-t-test-example-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "What to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\nOne-sample t-test example utilizing cards::ard_continuous().\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_summary(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fun\n1      AGE t_test_o…    estimate   estimate    75.024       1\n2      AGE t_test_o…   statistic  statistic     120.2       1\n3      AGE t_test_o…     p.value    p.value         0       1\n4      AGE t_test_o…   parameter  parameter       167       1\n5      AGE t_test_o…    conf.low   conf.low    73.792       1\n6      AGE t_test_o…   conf.high  conf.high    76.256       1\n7      AGE t_test_o…      method     method One Samp…    &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided    &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cardx-t-test-example-2",
    "href": "slides/01-ARD/cards.html#cardx-t-test-example-2",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "How to modify if we need a two-sample test, or more generally accessing other columns in the data frame.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_mvsummary(\n    variables = AGE,\n    statistic = \n      ~ list(t_test = \\(x, data, ...) t.test(x ~ data$ARM) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cardx-regression",
    "href": "slides/01-ARD/cards.html#cardx-regression",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Includes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), quantreg::rq(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), svyVGAM::svy_vglm(), tidycmprsk::crr(), VGAM::vgam(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/01-ARD/cards.html#cardx-regression-1",
    "href": "slides/01-ARD/cards.html#cardx-regression-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "The cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more.\n\n\nlm(AGE ~ ARM, data = cards::ADSL) |&gt;\n  cardx::ard_regression(add_estimate_to_reference_rows = TRUE)\n\n{cards} data frame: 43 x 9\n\n\n   variable variable_level   context      stat_name stat_label      stat\n1       ARM        Placebo regressi…           term       term ARMPlace…\n2       ARM        Placebo regressi…      var_label      Label Descript…\n3       ARM        Placebo regressi…      var_class      Class character\n4       ARM        Placebo regressi…       var_type       Type categori…\n5       ARM        Placebo regressi…    var_nlevels   N Levels         3\n6       ARM        Placebo regressi…      contrasts  contrasts contr.tr…\n7       ARM        Placebo regressi… contrasts_type  Contrast… treatment\n8       ARM        Placebo regressi…  reference_row  referenc…      TRUE\n9       ARM        Placebo regressi…          label  Level La…   Placebo\n10      ARM        Placebo regressi…          n_obs     N Obs.        86\n\n\nℹ 33 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fun, warning, error"
  },
  {
    "objectID": "slides/01-ARD/cards.html#when-things-go-wrong",
    "href": "slides/01-ARD/cards.html#when-things-go-wrong",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "What happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_summary(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fun\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/01-ARD/intro_to_ards.html",
    "href": "slides/01-ARD/intro_to_ards.html",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Emerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review\n\n\n\n\nExample ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n\n\n\n\nExample ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis\n\n\n\n\n\n\nEncodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results\n\n\n\n\n\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs.\n\n\n\n\n\n\n\n\n\n\n\nRethinking QC\n\nQC can be focused on the raw value, not the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/01-ARD/intro_to_ards.html#analysis-results-standard-ars-1",
    "href": "slides/01-ARD/intro_to_ards.html#analysis-results-standard-ars-1",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Emerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/01-ARD/intro_to_ards.html#analysis-results-standard-ars-2",
    "href": "slides/01-ARD/intro_to_ards.html#analysis-results-standard-ars-2",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Example ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/01-ARD/intro_to_ards.html#analysis-results-standard-ars-3",
    "href": "slides/01-ARD/intro_to_ards.html#analysis-results-standard-ars-3",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Example ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/01-ARD/intro_to_ards.html#analysis-results-data-ard",
    "href": "slides/01-ARD/intro_to_ards.html#analysis-results-data-ard",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Encodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/01-ARD/intro_to_ards.html#analysis-results-data-ard-1",
    "href": "slides/01-ARD/intro_to_ards.html#analysis-results-data-ard-1",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "After the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/01-ARD/intro_to_ards.html#a-few-notes-about-ards",
    "href": "slides/01-ARD/intro_to_ards.html#a-few-notes-about-ards",
    "title": "Analysis Results Standard",
    "section": "",
    "text": "Rethinking QC\n\nQC can be focused on the raw value, not the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  }
]